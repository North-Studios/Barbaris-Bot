import re
import subprocess
import psutil
import os
from database import Database


class Utils:
    @staticmethod
    def extract_username(text):
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ username –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        if not text:
            return None

        # –£–±–∏—Ä–∞–µ–º @ –≤ –Ω–∞—á–∞–ª–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        text = text.replace('@', '').strip()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å username
        if re.match(r'^[a-zA-Z0-9_]{1,32}$', text):  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 1 —Å–∏–º–≤–æ–ª
            return text.lower()
        return None

    @staticmethod
    def get_user_info_text(username):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        user = Database.get_user(username)
        if not user:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

        rank_translation = {
            'user': 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'ladmin': 'üë®‚Äçüíº –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            'gadmin': 'üëë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            'operator': '‚ö° –û–ø–µ—Ä–∞—Ç–æ—Ä'
        }

        rank = rank_translation.get(user['rank'], 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        banned = "üö´ –ó–∞–±–∞–Ω–µ–Ω" if user.get('banned', False) else "‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"

        return f"""üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

üìß Username: @{username}
üë®‚Äçüíº –†–∞–Ω–≥: {rank}
üÜî ID: {user.get('id', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
üìõ –ò–º—è: {user.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
üìä –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {banned}"""

    @staticmethod
    def get_bot_status(bot_name):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
        bots = Database.load_bots()
        bot = bots.get(bot_name)

        if not bot or not bot.get('exe'):  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 'exe'
            return "not_found"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
        try:
            exe_path = bot['exe']  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 'exe'
            exe_name = os.path.basename(exe_path)

            for process in psutil.process_iter(['name', 'exe']):
                if process.info['exe'] and os.path.basename(process.info['exe']).lower() == exe_name.lower():
                    return "running"
            return "stopped"
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ {bot_name}: {e}")
            return "error"

    @staticmethod
    def start_bot(bot_name):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        bots = Database.load_bots()
        bot = bots.get(bot_name)

        if not bot or not bot.get('exe'):  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 'exe'
            return False, "‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç
            if Utils.get_bot_status(bot_name) == "running":
                return False, "‚ùå –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

            subprocess.Popen([bot['exe']])  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 'exe'
            return True, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
        except Exception as e:
            return False, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}"

    @staticmethod
    def stop_bot(bot_name):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        bots = Database.load_bots()
        bot = bots.get(bot_name)

        if not bot:
            return False, "‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"

        exe_path = bot.get('exe')  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 'exe'
        if not exe_path:
            return False, "‚ùå –ü—É—Ç—å –∫ exe –Ω–µ —É–∫–∞–∑–∞–Ω"

        try:
            process_found = False
            exe_name = os.path.basename(exe_path)

            for process in psutil.process_iter(['name', 'exe']):
                if process.info['exe'] and os.path.basename(process.info['exe']).lower() == exe_name.lower():
                    process.terminate()
                    process_found = True

            if process_found:
                return True, "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else:
                return False, "‚ùå –ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
        except Exception as e:
            return False, f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}"

    @staticmethod
    def get_stats():
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        users = Database.load_users()
        bots = Database.load_bots()
        admins = Database.load_admins()

        total_users = len(users)
        banned_users = sum(1 for user in users.values() if user.get('banned', False))

        running_bots = 0
        for bot_name in bots:
            if Utils.get_bot_status(bot_name) == "running":
                running_bots += 1

        return f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
üö´ –ó–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö: {banned_users}
‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {total_users - banned_users}

ü§ñ –í—Å–µ–≥–æ –±–æ—Ç–æ–≤: {len(bots)}
‚ñ∂Ô∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: {running_bots}
‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö: {len(bots) - running_bots}

üëë –ì–ª–æ–±–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤: {len(admins.get('global_admins', []))}
‚ö° –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤: {len(admins.get('operators', []))}"""

    @staticmethod
    def format_user_list(users, list_type):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        if not users:
            return "‚ùå –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"

        emoji = {
            'ban': 'üö´',
            'ladmin': 'üë®‚Äçüíº',
            'gadmin': 'üëë',
            'operator': '‚ö°'
        }

        title = {
            'ban': '–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'ladmin': '–õ–æ–∫–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
            'gadmin': '–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
            'operator': '–û–ø–µ—Ä–∞—Ç–æ—Ä—ã'
        }

        result = [f"<b>{emoji[list_type]} {title[list_type]}</b>\n"]

        for i, username in enumerate(users, 1):
            user = Database.get_user(username)
            if user:
                status = "üö´" if user.get('banned', False) else "‚úÖ"
                result.append(f"{i}. @{username} {status}")
            else:
                result.append(f"{i}. @{username} (–Ω–µ—Ç –≤ –±–∞–∑–µ)")

        return "\n".join(result)